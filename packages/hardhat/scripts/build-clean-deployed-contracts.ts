import fs from "fs";
import path from "path";

// New clean contract addresses from our deployment
const CLEAN_CONTRACTS = {
  MockZKVerifier: "0x9DBb24B10502aD166c198Dbeb5AB54d2d13AfcFd",
  ZKCreditScoring: "0xF8b299F87EBb62E0b625eAF440B73Cc6b7717dbd",
  ZKCreditLending: "0xEb0fCBB68Ca7Ba175Dc1D3dABFD618e7a3F582F6",
};

async function buildCleanDeployedContracts() {
  console.log("ðŸ§¹ Building clean deployedContracts.ts with complete ABIs...");

  // Read ABIs from artifacts
  const artifactsDir = path.join(__dirname, "../artifacts/contracts");

  const mockVerifierArtifact = JSON.parse(
    fs.readFileSync(path.join(artifactsDir, "MockZKVerifier.sol/MockZKVerifier.json"), "utf8"),
  );

  const zkScoringArtifact = JSON.parse(
    fs.readFileSync(path.join(artifactsDir, "ZKCreditScoring.sol/ZKCreditScoring.json"), "utf8"),
  );

  const zkLendingArtifact = JSON.parse(
    fs.readFileSync(path.join(artifactsDir, "ZKCreditLending.sol/ZKCreditLending.json"), "utf8"),
  );

  // Generate the clean file content
  const cleanContent = `/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    MockZKVerifier: {
      address: "${CLEAN_CONTRACTS.MockZKVerifier}",
      abi: ${JSON.stringify(mockVerifierArtifact.abi, null, 8)},
      inheritedFunctions: {},
    },
    ZKCreditScoring: {
      address: "${CLEAN_CONTRACTS.ZKCreditScoring}",
      abi: ${JSON.stringify(zkScoringArtifact.abi, null, 8)},
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    ZKCreditLending: {
      address: "${CLEAN_CONTRACTS.ZKCreditLending}",
      abi: ${JSON.stringify(zkLendingArtifact.abi, null, 8)},
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;`;

  // Write the clean file
  const outputFile = path.join(__dirname, "../../nextjs/contracts/deployedContracts.ts");
  fs.writeFileSync(outputFile, cleanContent);

  console.log("âœ… Built clean deployedContracts.ts with complete ABIs!");
  console.log("ðŸ“‹ Contracts included:");
  console.log("  - MockZKVerifier:", CLEAN_CONTRACTS.MockZKVerifier);
  console.log("  - ZKCreditScoring:", CLEAN_CONTRACTS.ZKCreditScoring);
  console.log("  - ZKCreditLending:", CLEAN_CONTRACTS.ZKCreditLending);
}

buildCleanDeployedContracts().catch(console.error);

/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
export const deployedContracts = {
  31337: {
    MockZKVerifierV2: {
      address: "0x057cD3082EfED32d5C907801BF3628B27D88fD80",
      abi: [
        {
          type: "function",
          name: "verifyProof",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [
            { type: "bytes", name: "proof" },
            { type: "uint256[4]", name: "publicSignals" },
          ],
          outputs: [{ type: "bool", name: "" }],
        },
        {
          type: "function",
          name: "testVerification",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [],
          outputs: [{ type: "bool", name: "" }],
        },
      ],
      inheritedFunctions: {},
    },
    DynamicTargetRateModel: {
      address: "0xad203b3144f8c09a20532957174fc0366291643c",
      abi: [
        { type: "constructor", stateMutability: "nonpayable", payable: false, inputs: [] },
        {
          type: "function",
          name: "calculateInterestRate",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [
            { type: "uint256", name: "creditScore" },
            { type: "uint256", name: "poolUtilization" },
            { type: "uint256", name: "loanAmount" },
            { type: "uint256", name: "loanDuration" },
          ],
          outputs: [{ type: "uint256", name: "" }],
        },
      ],
      inheritedFunctions: {},
    },
    ZKCreditScoring: {
      address: "0xb6057e08a11da09a998985874FE2119e98dB3D5D",
      abi: [
        {
          type: "constructor",
          stateMutability: "nonpayable",
          payable: false,
          inputs: [{ type: "address", name: "_zkVerifier" }],
        },
        {
          type: "function",
          name: "getCreditProfile",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [{ type: "address", name: "user" }],
          outputs: [
            { type: "uint256", name: "score" },
            { type: "uint256", name: "lastUpdated" },
            { type: "bool", name: "isActive" },
            { type: "uint8", name: "privacyLevel" },
            { type: "bool", name: "isVerified" },
          ],
        },
        {
          type: "function",
          name: "registerUser",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [],
          outputs: [],
        },
        {
          type: "function",
          name: "registerUserWithTransparency",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [{ type: "uint8", name: "transparencyLevel" }],
          outputs: [],
        },
        {
          type: "function",
          name: "submitCreditProof",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [
            { type: "bytes", name: "proof" },
            { type: "uint256[3]", name: "publicSignals" },
            { type: "bytes32", name: "commitment" },
            { type: "uint256", name: "totalVolume" },
            { type: "uint256", name: "transactionCount" },
            { type: "uint256", name: "loanCount" },
            { type: "uint256", name: "repaidLoans" },
            { type: "uint256", name: "defaultedLoans" },
          ],
          outputs: [],
        },
        {
          type: "function",
          name: "getTransparencyPremium",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [{ type: "address", name: "user" }],
          outputs: [{ type: "uint256", name: "" }],
        },
        {
          type: "function",
          name: "updateTransparencyLevel",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [{ type: "uint8", name: "newLevel" }],
          outputs: [],
        },
        {
          type: "function",
          name: "switchToMaxPrivacy",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [],
          outputs: [],
        },
        {
          type: "function",
          name: "getCreditScore",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [{ type: "address", name: "user" }],
          outputs: [{ type: "uint256", name: "" }],
        },
        {
          type: "function",
          name: "isEligibleForLoan",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [
            { type: "address", name: "user" },
            { type: "uint256", name: "minScore" },
          ],
          outputs: [{ type: "bool", name: "" }],
        },
        {
          type: "function",
          name: "creditProfiles",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [{ type: "address", name: "" }],
          outputs: [
            { type: "uint256", name: "score" },
            { type: "uint256", name: "lastUpdated" },
            { type: "bool", name: "isActive" },
            { type: "bytes32", name: "dataCommitment" },
            { type: "uint8", name: "privacyLevel" },
            { type: "bool", name: "isVerified" },
          ],
        },
      ],
      inheritedFunctions: {},
    },
    ZKCreditLending: {
      address: "0x31403b1e52051883f2Ce1B1b4C89f36034e1221D",
      abi: [
        {
          type: "constructor",
          stateMutability: "nonpayable",
          payable: false,
          inputs: [
            { type: "address", name: "_zkCreditScoring" },
            { type: "address", name: "_rateModel" },
          ],
        },
        {
          type: "function",
          name: "getLenderInfo",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [{ type: "address", name: "lender" }],
          outputs: [
            { type: "uint256", name: "totalShares" },
            { type: "uint256", name: "sharePercentage" },
          ],
        },
        {
          type: "function",
          name: "getBorrowerLoans",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [{ type: "address", name: "borrower" }],
          outputs: [{ type: "uint256[]", name: "" }],
        },
        {
          type: "function",
          name: "getLoanDetails",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [{ type: "uint256", name: "loanId" }],
          outputs: [
            { type: "uint256", name: "amount" },
            { type: "uint256", name: "interestRate" },
            { type: "uint256", name: "dueDate" },
            { type: "bool", name: "isActive" },
            { type: "bool", name: "isRepaid" },
            { type: "uint8", name: "privacyLevel" },
            { type: "uint256", name: "transparencyPremium" },
          ],
        },
        {
          type: "function",
          name: "checkLoanEligibility",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [
            { type: "address", name: "borrower" },
            { type: "uint256", name: "amount" },
          ],
          outputs: [
            { type: "bool", name: "eligible" },
            { type: "uint256", name: "maxAmount" },
            { type: "uint256", name: "estimatedRate" },
            { type: "uint8", name: "privacyLevel" },
            { type: "uint256", name: "transparencyPremium" },
          ],
        },
        {
          type: "function",
          name: "getPoolInfo",
          constant: true,
          stateMutability: "view",
          payable: false,
          inputs: [],
          outputs: [
            { type: "uint256", name: "totalFunds" },
            { type: "uint256", name: "availableFunds" },
            { type: "uint256", name: "totalLoaned" },
            { type: "uint256", name: "utilization" },
            { type: "uint256", name: "totalInterestEarned" },
          ],
        },
        {
          type: "function",
          name: "requestLoan",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [{ type: "uint256", name: "amount" }],
          outputs: [{ type: "uint256", name: "" }],
        },
        {
          type: "function",
          name: "repayLoan",
          constant: false,
          stateMutability: "payable",
          payable: true,
          inputs: [{ type: "uint256", name: "loanId" }],
          outputs: [],
        },
        {
          type: "function",
          name: "stakeETH",
          constant: false,
          stateMutability: "payable",
          payable: true,
          inputs: [],
          outputs: [],
        },
        {
          type: "function",
          name: "unstakeETH",
          constant: false,
          stateMutability: "nonpayable",
          payable: false,
          inputs: [{ type: "uint256", name: "amount" }],
          outputs: [],
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts;
